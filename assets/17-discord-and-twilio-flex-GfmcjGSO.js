const n=`---
title: "Discord (3/3): Discord மற்றும் Twilio Flex: Flex தொடர்பு மையத்தை அறியப்படாத பகுதிக்கு கொண்டு வருதல்"
metatitle: "Discord (3/3): Discord இல் Twilio Flex தொடர்பு மையம்"
date: 2022-06-07 12:32:24-07:00
modified_date: 2025-07-28T16:56:53Z
draft: false
author: Kim Dodds
description: "இந்த வலைப்பதிவில், Seasalt.ai ஒரு முழுமையான தொடர்பு மையத்தை Discord சேவையகத்தில் எவ்வாறு ஒருங்கிணைத்தது என்பதை நாங்கள் நிரூபிப்போம்."
weight: 1
tags:
  - SeaX
  - Discord
image: /images/blog/17-discord-and-twilio-flex-bringing-flex-contact-center-into-uncharted-territory/flex-discord-thumbnail.png
canonicalURL: /blog/discord-and-twilio
url: /blog/discord-and-twilio/
---

*இது Discord இல் வாடிக்கையாளர் ஈடுபாடு பற்றிய மூன்று பகுதித் தொடரில் எங்கள் கடைசி இடுகை. எங்கள் முதல் வலைப்பதிவு, [“வாடிக்கையாளர் ஈடுபாட்டிற்கான ஒரு புதிய எல்லை”](https://seasalt.ai/blog/15-discord-a-new-frontier-for-customer-engagement/), Discord இன் புகழ் அதிகரிப்பு மற்றும் பிராண்டுகள் தங்கள் சொந்த ஆன்லைன் சமூகங்களை உருவாக்க மற்றும் பங்கேற்க இது வழங்கும் புதிய வாய்ப்பைப் பற்றி விவாதித்தது. இரண்டாம் பகுதியில், [“உங்கள் பிராண்டிற்கான Discord சமூகத்தையும் போட்களையும் உருவாக்குவது எப்படி”](https://seasalt.ai/blog/16-discord-how-to-create-a-discord-community-and-bot-for-your-brand/), உங்கள் பிராண்டிற்கான Discord சேவையகத்தை எவ்வாறு உருவாக்குவது மற்றும் சேவையக மிதப்படுத்தல், அறிவிப்புகள், பயனர் கருத்துகள் போன்றவற்றை நிர்வகிக்க ஒரு போட்டை எவ்வாறு ஒருங்கிணைப்பது என்பதை நாங்கள் விளக்கினோம். இறுதியாக, இந்த வலைப்பதிவில், Seasalt.ai இல் நாங்கள் ஒரு முழுமையான தொடர்பு மையத்தை Discord சேவையகத்தில் எவ்வாறு ஒருங்கிணைத்தோம் என்பதற்கான ஒரு விளக்கத்தை நாங்கள் வழங்குவோம், இது பிராண்டுகள் தளத்தில் வாடிக்கையாளர் கவனிப்பின் அனைத்து அம்சங்களையும் கையாள அனுமதிக்கிறது.*

## பொருளடக்கம்
- [பொருளடக்கம்](#table-of-contents)
- [Discord வாடிக்கையாளர் சேவை டெமோ](#discord-customer-service-demo)
- [ட்விலியோ ஃப்ளெக்ஸ்](#twilio-flex)
- [SeaX](#seax)
- [டெமோ சேவையகம்](#demo-server)
  - [1-க்கு-பல உதவி: அதிகாரப்பூர்வ சேனல்கள்](#1-to-many-help-official-channels)
  - [1-க்கு-1 உதவி: வாடிக்கையாளர் சேவை முகவர்](#1-to-1-help-customer-service-agent)
    - [அறிவுத் தளம்](#knowledge-base)
    - [நேரடி முகவர் பரிமாற்றம்](#live-agent-transfer)
  - [வழக்கு மேலாண்மை](#case-management)
- [தொழில்நுட்ப ஆழமான ஆய்வு](#technical-deep-dive)
  - [ஃப்ளெக்ஸ் ஓட்டத்தை வரையறுக்கவும்](#define-the-flex-flow)
  - [தனிப்பயன் சேனலை உருவாக்கவும்](#create-a-custom-channel)
  - [மேலும் சிக்கலான ரூட்டிங்கை ஆதரிக்க ஒரு HTTP சேவையகத்தை உருவாக்கவும்](#create-an-http-server-to-support-more-complex-routing)
    - [வெளிச்செல்லும் செய்திகள் வெப்ஹூக்](#outbound-messages-webhook)
    - [போட் ஒருங்கிணைப்பு](#bot-integration)
- [சுருக்கம்](#summary)

# Discord வாடிக்கையாளர் சேவை டெமோ
நீங்கள் நேரடியாக இறுதி தயாரிப்பைப் பார்க்க ஆர்வமாக இருந்தால், முதலில் இறுதி டெமோ வீடியோவை வழங்குவோம்:

<iframe width="85%" height="450px" src="https://www.youtube.com/embed/iUK4YkGYI6Q" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen style="border-radius: 30px;"></iframe>


Discord ஐ தற்போதுள்ள வாடிக்கையாளர் சேவை மென்பொருளில் (இந்த விஷயத்தில், [Twilio Flex](https://flex.twilio.com/)) எவ்வாறு ஒருங்கிணைக்க முடியும் என்பதை நிரூபிப்பதே எங்கள் குறிக்கோள், இது ஒரு பிராண்டின் அதிகாரப்பூர்வ சேவையகத்திற்கு கூடுதல் மதிப்பை சேர்க்கும். எங்கள் செயலாக்கத்தைப் பற்றி மேலும் அறிய தொடர்ந்து படிக்கவும்.

# ட்விலியோ ஃப்ளெக்ஸ்
ட்விலியோ ஒரு நன்கு நிறுவப்பட்ட தகவல் தொடர்பு நிறுவனம் ஆகும், இது உரைச் செய்திகள், தொலைபேசி அழைப்புகள், மின்னஞ்சல்கள், அரட்டைச் செய்திகள் மற்றும் பலவற்றை நிர்வகிப்பதற்கான APIகளை வழங்குகிறது. ஃப்ளெக்ஸ் ட்விலியோவின் முதன்மை தயாரிப்புகளில் ஒன்றாகும்: எந்த மூலத்திலிருந்தும் செய்திகள் மற்றும் அழைப்புகளை மெய்நிகர் மற்றும் நேரடி முகவர்களுக்கு அனுப்பும் ஒரு அளவிடக்கூடிய கிளவுட் அடிப்படையிலான தொடர்பு மையம். பேஸ்புக், எஸ்எம்எஸ் மற்றும் வாட்ஸ்அப் போன்ற பல்வேறு சேனல்களுக்கு இது ஏற்கனவே சிறந்த ஆதரவைக் கொண்டிருப்பதால், எங்கள் தொடர்பு மைய ஒருங்கிணைப்புக்கான அடிப்படையாக ஃப்ளெக்ஸை நாங்கள் தேர்ந்தெடுத்தோம்.

# SeaX
SeaX என்பது மேம்பட்ட AI அம்சங்களுடன் ஆழமாக ஒருங்கிணைக்கப்பட்ட ஒரு கிளவுட் தொடர்பு மையம் ஆகும், இது உற்பத்தித்திறன் மற்றும் வாடிக்கையாளர் திருப்தியை அதிகரிக்க உதவுகிறது. SeaX என்பது Seasalt.ai இன் முதன்மை தயாரிப்புகளில் ஒன்றாகும், மேலும் இது ஏற்கனவே 150 க்கும் மேற்பட்ட நாடுகளில் உள்ள வாடிக்கையாளர்களுக்கு வழங்கப்பட்டுள்ளது. SeaX தொடர்பு மைய தளம் Twilio Flex இன் மேல் கட்டப்பட்டுள்ளது மற்றும் நேரடி முகவர்களுக்கு வாடிக்கையாளர்களுக்கு சிறப்பாக உதவ உதவும் பல்வேறு கூடுதல் அம்சங்களை உள்ளடக்கியது. மிகவும் பயனுள்ள அம்சங்களில் சில உள்-உரை-க்கு-பேச்சு மற்றும் பேச்சு-க்கு-உரை, AI-இயங்கும் அறிவுத் தளம் மற்றும் ஒருங்கிணைந்த வழக்கு மேலாண்மை அமைப்பு ஆகியவை அடங்கும். SeaX தளத்தின் அனைத்து திறன்களையும் பற்றிய கூடுதல் தகவலுக்கு, தயவுசெய்து [SeaX முகப்புப் பக்கத்தைப்](https://seax.seasalt.ai/?utm_source=blog/) பார்வையிடவும்.

# டெமோ சேவையகம்
இப்போது எங்கள் Discord சேவையகத்தை எவ்வாறு அமைத்தோம் என்பதைப் பார்ப்போம். டெமோவின் நோக்கங்களுக்காக, எங்கள் சேவையகம் Pokémon Go! போன்ற ஒரு விளையாட்டிற்கான சமூகமாகப் பயன்படுத்தப்படும் ஒரு காட்சியை நாங்கள் கற்பனை செய்தோம். பின்வரும் அட்டவணை எங்கள் Discord சேவையகத்தில் நிரூபிக்கப்பட்ட சில அம்சங்களை மேலோட்டமாகப் பார்க்கிறது.

<center>
<img src="/images/blog/17-discord-and-twilio-flex-bringing-flex-contact-center-into-uncharted-territory/discord-flex-demo-features-2.png" alt="டெமோ வாடிக்கையாளர் சேவை Discord சேவையகத்தின் அம்ச மேலோட்டம்."/>

*டெமோ Discord சேவையகத்தின் அம்ச மேலோட்டம்.*
</center>

## 1-க்கு-பல உதவி: அதிகாரப்பூர்வ சேனல்கள்
சேவையகத்தில் பல சேனல்கள் அதிகாரப்பூர்வ நிர்வாகிகள்/டெவலப்பர்கள் மற்றும் பிளேயர்களுக்கு இடையே நேரடி ஸ்ட்ரீமை வழங்க அமைக்கப்பட்டுள்ளன.
**அறிவிப்பு சேனல்** நிர்வாகிகள் மற்றும் மோட்களால் மட்டுமே இடுகையிட முடியும், மேலும் Twitter கணக்கு, வலைத்தளம் அல்லது பிற அதிகாரப்பூர்வ மூலங்களிலிருந்து (கைமுறையாக அல்லது தானியங்கு) இடுகைகளை உள்ளடக்கியிருக்கலாம்.

<center>
<img src="/images/blog/17-discord-and-twilio-flex-bringing-flex-contact-center-into-uncharted-territory/discord-flex-demo-announcement-channel.jpg" alt="Discord சேவையகத்தில் உள்ள அறிவிப்புகள் சேனல், ஒரு அதிகாரப்பூர்வ Twitter கணக்கிலிருந்து ஒரு இடுகையைக் கொண்டுள்ளது."/>

*டெமோ Discord சேவையகத்தில் உள்ள #announcements சேனல்.*
</center>

**பிழை அறிக்கை சேனல்** வீரர்கள் பிழைகள் மற்றும் விளையாட்டை முடக்கும் சிக்கல்களைப் பற்றி விவாதிக்க அனுமதிக்கிறது. நிர்வாகிகள் இந்த சேனலைக் கண்காணித்து, விளையாட்டில் இலக்கு வைக்கப்பட வேண்டிய சிக்கல்களை அடையாளம் காணலாம். கூடுதலாக, பயனர்கள் சேனலுக்குள் இருந்து \`/bug\` ஸ்லாஷ் கட்டளையைப் பயன்படுத்தி அதிகாரப்பூர்வ பிழை அறிக்கையைச் சமர்ப்பிக்கலாம்.

<center>
<img src="/images/blog/17-discord-and-twilio-flex-bringing-flex-contact-center-into-uncharted-territory/discord-flex-demo-bug-report-channel.jpg" alt="Discord சேவையகத்தில் உள்ள பிழை அறிக்கை சேனல், சமர்ப்பிக்கப்பட்ட பிழை அறிக்கையைக் கொண்டுள்ளது."/>

*டெமோ Discord சேவையகத்தில் உள்ள #bug-report சேனல், சமர்ப்பிக்கப்பட்ட பிழை அறிக்கையைக் கொண்டுள்ளது.*
</center>

**அம்சக் கோரிக்கை சேனல்** வீரர்கள் விளையாட்டு மாற்றங்கள், வாழ்க்கைத் தர மேம்பாடுகள், உள்ளடக்கச் சேர்க்கைகள் போன்றவற்றை விளையாட்டில் சேர்க்க விரும்புவதைப் பற்றி விவாதிக்க அனுமதிக்கிறது. பிழை கோரிக்கை சேனலைப் போலவே, அவர்களின் உள்ளீட்டை Discord மோட்கள் பார்க்க முடியும், மேலும் அவர்கள் அதிகாரப்பூர்வ கோரிக்கையைச் சமர்ப்பிக்க \`/new_feature\` ஸ்லாஷ் கட்டளையைப் பயன்படுத்தலாம்.

<center>
<img src="/images/blog/17-discord-and-twilio-flex-bringing-flex-contact-center-into-uncharted-territory/discord-flex-demo-feature-request-channel.jpg" alt="Discord சேவையகத்தில் உள்ள அம்சக் கோரிக்கை சேனல், ஒரு பயனர் ஸ்லாஷ் கட்டளையைச் செயல்படுத்துவதைக் காட்டுகிறது."/>

*டெமோ Discord சேவையகத்தில் உள்ள #feature-request சேனல், ஒரு பயனர் ஸ்லாஷ் கட்டளையைச் செயல்படுத்துவதைக் காட்டுகிறது.*
</center>

## 1-க்கு-1 உதவி: வாடிக்கையாளர் சேவை முகவர்

விளையாட்டு வீரர்கள் \`/helpme\` ஸ்லாஷ் கட்டளையைப் பயன்படுத்தி ஒரு முகவருடன் நேரடி செய்தியைத் தூண்டலாம். வாடிக்கையாளர் சேவை முகவர் தானியங்கு (மெய்நிகர் முகவர்) அல்லது நேரடி முகவரால் இயக்கப்படலாம்.

எங்கள் டெமோவுக்காக, பயனருக்கு தொடர்புடைய கட்டுரை பரிந்துரைகளை வழங்க நிறுவனத்தின் அறிவுத் தளத்தை வினவும் ஒரு எளிய FAQ போட்டை அமைத்தோம். பயனர் ஒரு நேரடி முகவரையும் கோரலாம், மேலும் அதே அரட்டையில் SeaX இல் உள்ள ஒரு நேரடி முகவருக்கு மாற்றப்படுவார்.

<center>
<img src="/images/blog/17-discord-and-twilio-flex-bringing-flex-contact-center-into-uncharted-territory/discord-flex-demo-customer-service-channel.jpg" alt="Discord சேவையகத்தில் உள்ள வாடிக்கையாளர் சேவை சேனல், ஒரு பயனர் DM ஐத் தூண்டுவதைக் காட்டுகிறது."/>

*டெமோ Discord சேவையகத்தில் உள்ள #feature-request சேனல், ஒரு பயனர் DM ஐத் தூண்டுவதைக் காட்டுகிறது.*
</center>

### அறிவுத் தளம்
பயனர் மெய்நிகர் சேவை முகவருக்கு ஒரு வினவலைச் சமர்ப்பிக்கும்போது, முகவர் பயனரை அறிவுத் தளத்தில் உள்ள தொடர்புடைய கட்டுரைகளுக்குப் பரிந்துரைக்கலாம்.

### நேரடி முகவர் பரிமாற்றம்
ஒரு பயனர் போட் உடன் நேரடி செய்தியில் இருக்கும்போது, அவர்கள் ஒரு நேரடி முகவரைக் கோரலாம். அவர்களுக்கு ஒரு வழக்கு உருவாக்கப்பட்டுள்ளது என்றும், அவர்கள் ஒரு நேரடி முகவருக்கு மாற்றப்படுகிறார்கள் என்றும் உடனடியாக அறிவிக்கப்படும். நேரடி முகவர் அரட்டையில் சேரும்போது, அவர்களுக்கும் ஒரு அறிவிப்பு கிடைக்கும்.

<center>
<img src="/images/blog/17-discord-and-twilio-flex-bringing-flex-contact-center-into-uncharted-territory/discord-flex-demo-customer-service-dm.jpg" alt="வாடிக்கையாளர் சேவையுடன் நேரடி செய்தி, KB கட்டுரை பரிந்துரைகள், நேரடி முகவர் பரிமாற்றம் மற்றும் வழக்கு மேலாண்மை ஆகியவற்றைக் கொண்டுள்ளது."/>

*வாடிக்கையாளர் சேவையுடன் நேரடி செய்தி, KB கட்டுரை பரிந்துரைகள், நேரடி முகவர் பரிமாற்றம் மற்றும் வழக்கு மேலாண்மை ஆகியவற்றைக் கொண்டுள்ளது.*
</center>

பின்தளத்தில், நேரடி முகவர்கள் அனைத்து சேனல்களிலிருந்தும் (SMS, Facebook, Discord, குரல் அழைப்பு போன்றவை) உள்வரும் அழைப்புகள் மற்றும் அரட்டை செய்திகளை ஒரே தளத்தின் மூலம் கையாள முடியும். இந்த விஷயத்தில், பின்தள தளம் SeaX ஆகும்.

<center>
<img src="/images/blog/17-discord-and-twilio-flex-bringing-flex-contact-center-into-uncharted-territory/flex-discord-channel.jpg" alt="Discord இல் ஒரு பயனருடன் உரையாடலின் நேரடி முகவரின் பார்வையை SeaX இடைமுகம் காட்டுகிறது."/>

*Discord இல் ஒரு பயனருடன் உரையாடலின் நேரடி முகவரின் பார்வையை SeaX இடைமுகம் காட்டுகிறது.*
</center>

## வழக்கு மேலாண்மை
இந்த டெமோவில் நாங்கள் வலியுறுத்த விரும்பிய ஒரு அம்சம் வழக்கு மேலாண்மை ஆகும். Seasalt.ai இன் Discord தீர்வு SeaX வழக்கு மேலாண்மை அமைப்புடன் ஒருங்கிணைந்து பயனர்களிடமிருந்து பல்வேறு வழக்குகளை சரியாகக் கண்காணிக்கிறது. ஒரு பயனர் Discord போட் உடன் தொடர்பு கொள்ளும்போது (நேரடி முகவரைக் கோருவது அல்லது பிழையைப் புகாரளிப்பது போன்றவை), நாங்கள் தானாகவே ஒரு புதிய வழக்கை திறந்து, பயனர் மற்றும் அவர்கள் அனுபவிக்கும் சிக்கல் பற்றிய அனைத்து முக்கியமான தகவல்களையும் பதிவு செய்யலாம். இது நேரடி முகவருக்கு புகாரளிக்கப்பட்ட அனைத்து சிக்கல்களையும் எளிதாக அணுக அனுமதிக்கிறது, மேலும் வழக்கு தீர்க்கப்படும் வரை பயனர்களுடன் பின்தொடர்வதை உறுதி செய்கிறது.

<center>
<img src="/images/blog/17-discord-and-twilio-flex-bringing-flex-contact-center-into-uncharted-territory/discord-flex-new-case.png" alt="SeaX வழக்கு மேலாண்மை அமைப்பில் ஒரு புதிய வழக்கை உருவாக்குதல்."/>

*SeaX வழக்கு மேலாண்மை அமைப்பில் ஒரு புதிய வழக்கை உருவாக்குதல்.*

<img src="/images/blog/17-discord-and-twilio-flex-bringing-flex-contact-center-into-uncharted-territory/discord-flex-existing-case.png" alt="SeaX வழக்கு மேலாண்மை அமைப்பில் ஒரு இருக்கும் வழக்கை பார்வையிடுதல்."/>

*SeaX வழக்கு மேலாண்மை அமைப்பில் ஒரு இருக்கும் வழக்கை பார்வையிடுதல்.*

</center>

# தொழில்நுட்ப ஆழமான ஆய்வு

இப்போது நாம் இறுதி தயாரிப்பையும், சேவையக உறுப்பினர்கள் மற்றும் அவர்களுக்கு உதவும் நேரடி முகவர்களுக்கு கிடைக்கும் அனைத்து அம்சங்களையும் பார்த்தோம். ஆனால் இவை அனைத்தும் உண்மையில் எவ்வாறு செயல்படுத்தப்பட்டன? எங்கள் கடைசி வலைப்பதிவு இடுகையில், “[உங்கள் பிராண்டிற்கான Discord சமூகத்தையும் போட்களையும் உருவாக்குவது எப்படி](https://seasalt.ai/blog/16-discord-how-to-create-a-discord-community-and-bot-for-your-brand/)”, உங்கள் பிராண்டிற்கான Discord சேவையகத்தை எவ்வாறு உருவாக்குவது மற்றும் அதை நிர்வகிக்க ஒரு Discord போட்டை எவ்வாறு ஒருங்கிணைப்பது என்பதை நாங்கள் விளக்கினோம். இந்த மேம்பட்ட டெமோவை ஆதரிக்க, [Seasalt.ai இன் உரையாடல் AI இயந்திரமான SeaChat](https://chat.seasalt.ai) ஐயும் பயன்படுத்தினோம், இது எங்கள் Discord போட் பயனர்களுக்கான இயற்கை மொழி வினவல்களைக் கையாள அனுமதிக்கும் ஒரு எளிய சாட்போட்டை உருவாக்க.

SeaX பக்கத்தில், எங்கள் குழு Twilio உடன் நெருக்கமாகப் பணியாற்றி, Twilio Flex இன் மேல் கட்டப்பட்ட அம்சங்கள் நிறைந்த தொடர்பு மைய தீர்வை உருவாக்கியது. Twilio Flex மற்றும் அமைவு செயல்முறை எவ்வாறு செயல்படுகிறது என்பது பற்றிய கூடுதல் தகவலுக்கு, நீங்கள் [Twilio Flex விரைவு தொடக்க வழிகாட்டியைப்](https://www.twilio.com/docs/flex/quickstart) படிக்கலாம்.

Discord சேவையகம், Discord போட் மற்றும் சாட்போட்டைத் தயாரித்து, SeaX இன் ஒரு செயல்படும் நிகழ்வு இயங்குகிறது என்பதை உறுதிப்படுத்திய பிறகு, மிகப்பெரிய சவால் என்னவென்றால், பயனர், போட் மற்றும் SeaX இல் உள்ள நேரடி முகவர்களுக்கு மற்றும் அவர்களிடமிருந்து செய்திகளை சரியாக வழிநடத்துவதாகும். Twilio செய்தி வழிநடத்துதலில் அருமையாக உள்ளது, எனவே எங்கள் குறிக்கோள் எங்கள் Discord போட் சேவையகத்திற்குள் இருந்து அனைத்து ஸ்லாஷ் கட்டளைகளையும் கையாள்வது, பின்னர் மற்ற அனைத்து செய்திகளையும் (சாட்போட் அல்லது நேரடி முகவருக்கு நேரடி செய்திகள் போன்றவை) Twilio க்கு அனுப்புவது.

## ஃப்ளெக்ஸ் ஓட்டத்தை வரையறுக்கவும்
முதல் படி, Twilio க்கு நாங்கள் அனுப்பும் எந்த செய்திகளும் சரியான இடத்திற்கு அனுப்பப்படுவதை உறுதி செய்வதாகும். பயனர் ஒரு நேரடி முகவரைக் கோரினாரா என்பதை முதலில் சரிபார்க்கும் ஒரு எளிய Twilio ஓட்டத்தை நாங்கள் அமைத்தோம், அவ்வாறு இருந்தால், பின்வரும் செய்திகளை SeaX க்கு அனுப்புகிறது. பயனர் ஒரு நேரடி முகவரைக் கோரவில்லை என்றால், பதிலைப் பெற செய்தியை சாட்போட்டிற்கு அனுப்புகிறோம். ஓட்டத்தை எவ்வாறு அமைப்பது என்பது பற்றிய கூடுதல் தகவலுக்கு, [Twilio Studio Flow ஆவணத்தைப்](https://www.twilio.com/docs/studio) பார்க்கவும்.

<center>
<img src="/images/blog/17-discord-and-twilio-flex-bringing-flex-contact-center-into-uncharted-territory/discord-flex-flow.png" alt="உள்வரும் செய்திகளை ஒரு சாட்போட் அல்லது SeaX க்கு அனுப்பும் ஒரு எளிய ஃப்ளெக்ஸ் ஸ்டுடியோ ஓட்டம்."/>

*உள்வரும் செய்திகளை ஒரு சாட்போட் அல்லது SeaX க்கு அனுப்பும் ஒரு எளிய ஃப்ளெக்ஸ் ஸ்டுடியோ ஓட்டம்.*
</center>

## தனிப்பயன் சேனலை உருவாக்கவும்
இப்போது உள்வரும் செய்திகள் எவ்வாறு அனுப்பப்படும் என்பது பற்றி எங்களுக்கு ஒரு யோசனை உள்ளது. இருப்பினும், Discord Twilio ஆல் சொந்தமாக ஆதரிக்கப்படும் சேனல் அல்ல. அதிர்ஷ்டவசமாக, Twilio இல் [Twilio Flex க்கு ஒரு தனிப்பயன் அரட்டை சேனலை எவ்வாறு சேர்ப்பது](https://www.twilio.com/blog/add-custom-chat-channel-twilio-flex) என்பது பற்றிய விரிவான பயிற்சி உள்ளது. Twilio இல் புதிய தனிப்பயன் சேனலை அமைக்க வழிகாட்டியைப் பின்பற்றிய பிறகு, Discord இலிருந்து Twilio க்கு செய்திகளை அனுப்ப வேண்டும்.

முதலில் Twilio கிளையண்டை அமைப்போம்:

\`\`\`python
from twilio.rest import Client
twilio_client = Client(TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN)
\`\`\`

இப்போது, Discord இலிருந்து உள்வரும் செய்தியைப் பெற்றவுடன், Twilio கிளையண்ட் வழியாக அந்த செய்தியை Twilio க்கு அனுப்பலாம். முதலில், பயனர் ஏற்கனவே Twilio அமைப்பில் இருக்கிறாரா, மேலும் அவர்களுக்கு ஏற்கனவே ஒரு திறந்த அரட்டை சேனல் இருக்கிறதா என்பதை சரிபார்க்க வேண்டும்.

\`\`\`python
# பயனர் இருக்கிறாரா என்று சரிபார்க்க get_user முறையை அழைக்கவும், இல்லையென்றால் புதிய ஒன்றை உருவாக்கவும்
user = await get_user(user_id, twilio_client, TWILIO_SERVICE_SID)

# பயனர் இருக்கும் சேனல்களைப் பெறவும்
user_channels = twilio_client.chat \\
        .services(TWILIO_SERVICE_SID) \\
        .users(user_id) \\
        .user_channels \\
        .list()
\`\`\`

பயனருக்கு ஏற்கனவே திறந்த அரட்டை சேனல் இருந்தால், அரட்டை வரலாற்றை அணுகுவதற்கு அதை நாம் பயன்படுத்த வேண்டும். ஏற்கனவே அரட்டை சேனல் இல்லை என்றால், பயனருக்காக ஒரு புதிய ஒன்றை உருவாக்குகிறோம்:

\`\`\`python
if user_channels:
    channel_sid = user_channels[-1].channel_sid
else:
    channel = twilio_client.flex_api \\
            .channel \\
            .create(
                flex_flow_sid=FLEX_FLOW_ID,
                chat_user_friendly_name=username,
                chat_friendly_name=chat_name,  # -> அரட்டை சேனலின் நட்புப் பெயர்
                target=conversation_id,  # -> அரட்டை பயனரை தனித்துவமாக அடையாளம் காணும் அடையாளம்
                identity=conversation_id,  # -> பயனர், எ.கா./ Discord DM ID
        )
    channel_sid = channel.sid
\`\`\`

இறுதியாக, Discord பயனர் மற்றும் Twilio இடையே ஒரு திறந்த அரட்டை சேனல் கிடைத்தவுடன், உள்வரும் செய்தியை Twilio Studio ஓட்டத்திற்கு அனுப்பலாம்.

\`\`\`python
message = twilio_client.chat \\
        .services(TWILIO_SERVICE_SID) \\
        .channels(channel_sid) \\
        .messages \\
        .create(
            body=message_text,
            from_=user_id,
            x_twilio_webhook_enabled='true',
            attributes=json.dumps(message_json)  # தலைப்புகளை ஒரு பண்புக்கூறாக அனுப்பவும், இதனால் பின்னர் அணுக முடியும்
        )
\`\`\`
இப்போது Discord பயனர்களிடமிருந்து வரும் அனைத்து உள்வரும் செய்திகளையும் எங்கள் Twilio Flex Flow க்கு நேரடியாக அனுப்பும் திறன் எங்களிடம் உள்ளது. Discord போட் பக்கத்தில், அனைத்து நேரடி செய்திகளும் Twilio க்கு அனுப்பப்படுவதை உறுதிப்படுத்தவும். இப்போது நீங்கள் Discord போட் க்கு ஒரு நேரடி செய்தியை அனுப்ப முயற்சி செய்யலாம், மேலும் அது Twilio Studio Flow பதிவுகளில் தோன்றுவதை நீங்கள் பார்க்க வேண்டும் - ஆனால் நாங்கள் இன்னும் முடிக்கவில்லை!

## மேலும் சிக்கலான ரூட்டிங்கை ஆதரிக்க ஒரு HTTP சேவையகத்தை உருவாக்கவும்

### வெளிச்செல்லும் செய்திகள் வெப்ஹூக்
இப்போது உள்வரும் செய்திகள் எவ்வாறு அனுப்பப்படும் என்பது பற்றி எங்களுக்கு ஒரு யோசனை உள்ளது. இருப்பினும், இன்னும் சில பகுதிகள் விடுபட்டுள்ளன. முதலில், Twilio க்கு செய்திகளை அனுப்ப முடியும் என்று எங்களுக்குத் தெரியும், ஆனால் Discord இல் எங்கள் பயனர்களுக்கு நாங்கள் எவ்வாறு பதிலளிப்பது? எங்கள் Discord போட் மட்டுமே எங்கள் Discord சேவையகம் மற்றும் பயனர்களுக்கு செய்திகளை அனுப்ப அங்கீகரிக்கப்பட்டுள்ளது, மேலும் Twilio க்கு எங்கள் செய்திகளை Discord சேவையகத்திற்கு எவ்வாறு திருப்பி அனுப்புவது என்று தெரியவில்லை. தீர்வு என்னவென்றால், Twilio அரட்டை சேனலில் ஒரு புதிய செய்தி இருக்கும் ஒவ்வொரு முறையும் தூண்டப்படும் ஒரு வெளிச்செல்லும் செய்திகள் வெப்ஹூக்கை அமைக்க வேண்டும். அந்த வெப்ஹூக்கிற்குள், எங்கள் Discord போட்டைப் பயன்படுத்தி செய்தியை எங்கள் சேவையகத்திற்கு திருப்பி அனுப்பலாம்.

இதைச் செய்ய, எங்கள் Discord போட்டை ஒரு வலுவான HTTP சேவையகத்தில் ஒருங்கிணைக்கிறோம். எங்கள் வெளிச்செல்லும் செய்திகள் வெப்ஹூக்காக செயல்படும் ஒரு எளிய POST எண்ட்பாயிண்ட்டை அமைக்க [FastAPI](https://fastapi.tiangolo.com/) ஐப் பயன்படுத்தினோம். சேவையகத்தை அமைத்து, எங்கள் Discord போட் அதனுடன் இயங்கியவுடன், POST எண்ட்பாயிண்ட்டை வரையறுக்கலாம்.

இந்த எண்ட்பாயிண்ட் அரட்டை சேனலில் சேர்க்கப்பட்ட ஒவ்வொரு செய்தியையும் பெறும், எனவே முதலில் SeaX இலிருந்து வெளிச்செல்லும் செய்திகளைத் தவிர மற்ற அனைத்தையும் வடிகட்ட விரும்புகிறோம். அடுத்து, செய்தியை எங்கு அனுப்ப வேண்டும் என்பதை அறிய செய்தி உடலில் இருந்து சரியான சேனல் ஐடியைப் பெற வேண்டும். இறுதியாக, Discord கிளையண்டைப் பயன்படுத்தி செய்தியை Discord சேனலுக்கு அனுப்பலாம்.

\`\`\`python
@app.post("/forward-to-discord", status_code=200)
async def forward_discord_message(request: Request, response: Response) -> None:
    raw_body = await request.body()
    body = urllib.parse.parse_qs(raw_body.decode())

    # SDK இலிருந்து வரும் செய்திகளுக்கு மட்டுமே கவனம் செலுத்துங்கள் (Flex, மற்ற அனைத்தும் API இலிருந்து வரும்)
    if not body.get('Source') == ['SDK']:
        return

    # Flex இலிருந்து வரும் செய்திகளில் அசல் செய்தியின் உரையாடல் ஐடி இல்லை
    # GBM இல் உரையாடலுக்கு செய்தியை மீண்டும் அனுப்ப convId தேவை
    # முந்தைய செய்தியைப் பெற்று உரையாடல் ஐடியைப் பிரித்தெடுக்கவும்
    message = twilio_client.chat \\
            .services(TWILIO_SERVICE_SID) \\
            .channels(body.get("ChannelSid")[0]) \\
            .messages.list(limit=1)[0]

    attributes = json.loads(message.attributes)

    channel = discord_client.get_channel(attributes.get(“channel”, {}).get(“id”))
    if channel:
        await channel.send(body.get("Body", [""])[0].get(“text”))
    else:
        logger.error(f"ஐடி கொண்ட Discord சேனல் கண்டுபிடிக்கப்படவில்லை: {get_channel_id(req)}!")
        response.status_code = 400
\`\`\`

இறுதியாக, செய்திகள் எங்கள் எண்ட்பாயிண்ட்டிற்கு அனுப்பப்பட, எங்கள் புதிய வெப்ஹூக் என்ன என்பதை Twilio க்கு தெரிவிக்க வேண்டும். ஒவ்வொரு அரட்டை சேனலும் அதன் சொந்த வெப்ஹூக்கை உள்ளமைக்க வேண்டும். எனவே, பயனருக்காக புதிய அரட்டை சேனலை முதலில் உருவாக்கிய இடத்திற்குத் திரும்பினால், வெப்ஹூக்கை உள்ளமைக்க சில கூடுதல் குறியீட்டைச் சேர்க்கலாம்:

\`\`\`python
webhook = twilio_client.chat \\
        .services(TWILIO_SERVICE_SID) \\
        .channels(channel_sid) \\
        .webhooks \\
        .create(
            type='webhook',   
configuration_url=f"{SERVER_HOST}/forward-to-discord",
            configuration_method="POST",
            configuration_filters=["onMessageSent", "onMessageUpdated", "onMediaMessageSent"]
        )
\`\`\`

### போட் ஒருங்கிணைப்பு

இப்போது SeaX இலிருந்து வெளிச்செல்லும் செய்திகள் எங்கள் Discord சேவையகத்திற்கு சரியாக அனுப்பப்பட வேண்டும். ஆனால் சாட்போட்டிற்கு செல்லும் செய்திகளை நாங்கள் இன்னும் கையாளவில்லை. Twilio Studio Flow இலிருந்து தூண்டப்படும் ஒரு இறுதி எண்ட்பாயிண்ட்டை அமைக்க வேண்டும், அது பயனர் செய்தியைப் பெற்று, போட்டை வினவி, பதிலைத் Discord க்கு திருப்பி அனுப்பும்.

\`\`\`python
@app.post("/chatbot-to-discord", status_code=200)
async def receive_discord_message(request: Request, response: Response):
    """Twilio இலிருந்து POST கோரிக்கையைப் பெற்று, போட்டை வினவி, பதிலைத் Discord க்கு திருப்பி அனுப்பவும்."""
    req = await request.body()
    # அசல் செய்தி உடலை Twilio உள்ளடக்கத்திலிருந்து பிரிக்கவும்
    twilio_body, original_message_body = separate_original_message_body(req.decode())

    bot_response = await query_bot(original_message_body, bot_info)

    if bot_response:
        channel = discord_client.get_channel(original_message_body.get(“channel_id”))
        if channel:
            for item in bot_response:
                await channel.send(item.get(“text”))
\`\`\`

Twilio Studio Flow ஆனது போட் க்கு செய்திகளை அனுப்ப சரியான வெப்ஹூக்கைக் கொண்டுள்ளது என்பதை உறுதிப்படுத்தவும். இப்போது எங்கள் செய்தி வழிநடத்துதலை முடித்துவிட்டோம்! இந்த வரைபடத்தில் அனைத்து செய்தி வழிநடத்துதலின் உயர் மட்டக் காட்சியை நாம் காணலாம்:

<center>
<img src="/images/blog/17-discord-and-twilio-flex-bringing-flex-contact-center-into-uncharted-territory/discord-flex-routing-diagram.jpg" alt="செய்தி வழிநடத்துதல் வரைபடம்."/>

*செய்தி வழிநடத்துதல் வரைபடம்.*
</center>

# சுருக்கம்
முடிவாக, இந்த வலைப்பதிவுத் தொடரில் Discord இன் புகழ் அதிகரிப்பு மற்றும் வாடிக்கையாளர்களுடன் ஈடுபடுவதற்கான ஒரு புதிய தளமாக பிராண்டுகளுக்கு இது வழங்கும் வாய்ப்பைப் பற்றி விவாதித்தோம். ஒரு பிராண்ட் தங்கள் சொந்த ஆன்லைன் சமூகத்தை எவ்வாறு அமைக்கலாம் என்பதைக் காட்ட Discord இன் சில அடிப்படை அம்சங்களை நாங்கள் விளக்கினோம், அத்துடன் Discord போட்களுடன் தங்கள் சேவையகத்தில் மிதப்படுத்தல் மற்றும் வாடிக்கையாளர் ஆதரவை தானியங்குபடுத்த பிராண்டுகளை அனுமதிக்கும் மேம்பட்ட அம்சங்களையும் விளக்கினோம். இறுதியாக, நேரடி முகவர் பரிமாற்றம், வழக்கு மேலாண்மை, AI-இயங்கும் அறிவுத் தள தேடல் போன்ற மேம்பட்ட அம்சங்களை Discord சமூகத்திற்கு கொண்டு வர எங்கள் வாடிக்கையாளர் சேவை தளமான SeaX உடன் Discord ஐ எவ்வாறு ஒருங்கிணைத்தோம் என்பதற்கான எங்கள் விளக்கத்தை நாங்கள் பகிர்ந்து கொண்டோம்.
தனிப்பட்ட டெமோவுக்காக, அல்லது உங்கள் குறிப்பிட்ட வணிகத் தேவைகளை Seasalt.ai எவ்வாறு பூர்த்தி செய்ய முடியும் என்பதைப் பார்க்க, தயவுசெய்து எங்கள் “[டெமோவை பதிவு செய்யவும்](https://meetings.hubspot.com/seasalt-ai/seasalt-meeting)” படிவத்தை நிரப்பவும். Flex/Discord ஒருங்கிணைப்பு பற்றிய கூடுதல் தகவலுக்கு அல்லது எங்களைத் தொடர்பு கொள்ள, தயவுசெய்து [Seasalt.ai இன் Twilio கூட்டாளர் பட்டியலைப்](https://showcase.twilio.com/partner-listing/a8E8Z000000PDCQUA4) பார்வையிடவும்.
`;export{n as default};
